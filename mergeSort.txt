function mergeSort(arr){
  // put our edge case
  if( arr.length <= 1){
    return arr
  }

  // Divide into two parts
  const middle = Math.floor(arr.length / 2)
  const leftArr = arr.slice(0, middle)
  const rightArr = arr.slice(middle)
  
  //recursively sort 
  const sortedLeft = mergeSort(leftArr)
  const sortedRight = mergeSort(rightArr)
  
  // return and merge the answer
  // return [...sortedLeft, ...sortedRight]
  return merge(sortedLeft, sortedRight)
}

function merge(leftArr, rightArr){
  // initialize the parameters
  let left = 0;
  let right = 0;
  let mergedArray = [];
  
  // compare the two arr and push the smaller one
  while(left < leftArr.length && right < rightArr.length){
    if(leftArr[left] < rightArr[right]){
      mergedArray.push(leftArr[left])
      left++
    } else {
      mergedArray.push(rightArr[right])
      right++
    }
    
  }

  // adds the remaining
  mergedArray.push(...leftArr.slice(left), ...rightArr.slice(right))
  
  //returns the answer
  return mergedArray
}


console.log(mergeSort([1,2,5,4,6]))
console.log(mergeSort([-5,-6,4,1,6]))